#define WIN_MESSAGE_MS
(3000)
#define LOSE_MUSIC_SLOW_MS
(2000)
{arena
   add_handlers
   (init
      {set $game.outro_played 0}
      {if
         $cheat_meter
         {'player0::player' set_crowd_rating_active FALSE}
         {'player0::player' set_crowd_rating 1}})
   (terminate)
   (pre_switch_cam
      {if
         {==
            {arena cam_msg}
            "lose01"}
         {char_sys lose_teleport}})
   (post_switch_cam
      {if $depthmilo {arena set_depth_of_field FALSE}}
      {do
         ($force_char_lod)
         {set
            $force_char_lod
            {find_exists
               {arena cam_cmd}
               force_char_lod}}
         {set
            $force_char_lod
            {&&
               {!= $force_char_lod kDataUnhandled}
               {elem $force_char_lod 1}}}
         {foreach
            $char
            {char_sys all_chars}
            {$char set_min_lod $force_char_lod}}})
   (intro_start
      {play_game_sfx crowd_begin}
      {crowd_audio play_intro})
   (extend_track
      {track_panel do_extend_sequence})
   (click_start)
   (music_start
      {play_game_sfx crowd_upto_norm}
      {game
         delay_task
         CROWD_AUDIO_DELAY_TICKS
         {crowd_audio set_excitement $arena.excitement}}
      {ui music_start})
   (beat
      {if
         $barf_cheat
         {game anim_task track_panel 400 2000 2025}}
      {if
         $debug.beep
         {play_sfx click}}
      {if
         {!
            {tutorial is_tutorial_running}}
         {do
            (($clap FALSE))
            {player_mgr
               foreach_player
               $p
               {if
                  {$p in_star_mode}
                  {set $clap TRUE}}}
            {if
               $clap
               {arena
                  delay_task
                  CLAP_DELAY_TICKS
                  {play_game_sequence CLAP_SEQUENCE}}}}})
   (downbeat
      {player_mgr
         foreach_player
         $p
         {$p on_downbeat}})
   (excitement
      {game
         delay_task
         CROWD_AUDIO_DELAY_TICKS
         {crowd_audio set_excitement $arena.excitement}})
   (excitement_boot
      {stop_sfx crowd_upto_poor}
      {play_game_sfx crowd_dnto_danger})
   (excitement_bad_rising
      {stop_sfx crowd_dnto_danger}
      {play_game_sfx crowd_upto_poor})
   (excitement_bad_falling
      {stop_sfx crowd_upto_norm}
      {play_game_sfx crowd_dnto_poor})
   (excitement_okay_rising
      {stop_sfx crowd_dnto_poor}
      {play_game_sfx crowd_upto_norm})
   (excitement_okay_falling
      {stop_sfx crowd_upto_good}
      {play_game_sfx crowd_dnto_norm})
   (excitement_great
      {stop_sfx crowd_dnto_norm}
      {play_game_sfx crowd_upto_good})
   (game_over
      {player_mgr
         foreach_player
         $p
         {$p on_game_over}}
      {stop_sfx sp_deployed}
      {stop_sfx sp_deployed_multi})
   (game_won
      {track_panel explode}
      {play_game_sfx TRACK_EXPLODE_SFX}
      {game set_realtime TRUE}
      {hud set_in_game FALSE}
      {play_game_sfx crowd_win}
      {beatmatch set_paused TRUE}
      {hud set_win_showing TRUE}
      {game
         delay_task
         WIN_MESSAGE_MS
         {hud set_win_showing FALSE}})
   (game_lost
      {hud show_message 0 song_failed}
      {track_panel set_showing FALSE}
      {game set_realtime TRUE}
      {hud set_in_game FALSE}
      {hud set_score_showing FALSE}
      {play_game_sfx crowd_lose}
      {game
         interp_task
         LOSE_MUSIC_SLOW_MS
         $speed
         1.0
         0.0
         {beatmatch set_music_speed $speed}}
      {game
         delay_task
         LOSE_MUSIC_SLOW_MS
         {beatmatch set_paused TRUE}})
   (game_outro
      {if
         {! $game.outro_played}
         {set $game.outro_played 1}
         {arena set_depth_of_field FALSE}
         {synth stop_all_sfx}
         {game set_paused TRUE}
         {hud set_showing FALSE}
         {if_else
            $arena.game_won
            {do
               {hud set_win_showing FALSE}
               {if
                  {&&
                     {==
                        {meta get mode}
                        career}
                     {campaign final_song}}
                  {meta set won_campaign TRUE}}
               {ui
                  goto_screen
                  {if_else $auto_restart loading post_show}}}
            {ui
               goto_screen
               {meta get lose_screen}}}})}