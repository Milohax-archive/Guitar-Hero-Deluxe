(namespace 1024 8192)
(handlers
   (show_shadow
      ($rnd)
      {if_else
         {&&
            {exists game}
            {!
               {game multiplayer}}}
         {$this
            create_shadow
            (namespace 128 2000)
            (rnd $rnd)}
         0})
   (preload
      {$this
         add_servo
         {new
            AnimServoForeTwist
            "foreTwist_L.servo"
            (bones
               "bone_L-foreArm.mesh"
               "bone_L-foreTwist1.mesh"
               "bone_L-foreTwist2.mesh"
               "bone_L-hand.mesh")
            (offset 90)}
         1000}
      {$this
         add_servo
         {new
            AnimServoForeTwist
            "foreTwist_R.servo"
            (bones
               "bone_R-foreArm.mesh"
               "bone_R-foreTwist1.mesh"
               "bone_R-foreTwist2.mesh"
               "bone_R-hand.mesh")
            (offset -90)}
         1000}
      {$this
         add_servo
         {new
            AnimServoUpperTwist
            "upperTwist_L.servo"
            (bones
               "bone_L-upperTwist1.mesh"
               "bone_L-upperTwist2.mesh"
               "bone_L-upperArm.mesh")}
         1000}
      {$this
         add_servo
         {new
            AnimServoUpperTwist
            "upperTwist_R.servo"
            (bones
               "bone_R-upperTwist1.mesh"
               "bone_R-upperTwist2.mesh"
               "bone_R-upperArm.mesh")}
         1000}
      {if_else
         {$this has meta}
         {do
            {$this my_preload}
            {{"main.drv"
                  get_anims}
               set_load_any
               -1
               0}
            {{"main.drv"
                  get_anims}
               set_load_any
               kGuitarUI
               1}}
         {do
            {new
               AnimDriver
               "left_hand.drv"}
            {new
               AnimDriver
               "right_hand.drv"}
            {$this
               add_servo
               {new
                  AnimServoIK
                  "right_hand.ik"
                  (source
                     "bone_R-hand.mesh")
                  (dest
                     "bone_strum_hand.mesh")
                  (bones
                     "bone_R-foreArm.mesh"
                     2)
                  (align_quat 1)
                  (stretch 1)}
               1}
            {$this
               add_servo
               {new
                  AnimServoIK
                  "left_hand.ik"
                  (source
                     "bone_L-hand.mesh")
                  (dest
                     "bone_fret_hand.mesh")
                  (bones
                     "bone_L-foreArm.mesh"
                     2)
                  (align_quat 1)
                  (stretch 1)}
               1}
            {$this
               create_eyes
               (parent bone_head.mesh)
               (constraint 0.925)
               (lid_lower 0.5)}
            {$this
               create_walk
               (turn kWalkTurn)
               (stop kWalkStop)
               (walk kWalkWalk)}
            {$this my_preload}}})
   (reset
      {if
         {&&
            {exists game}
            {game is_up}
            {game multiplayer}}
         {$this
            set
            score_diff
            {/
               {beatmatch base_max_score 0}
               15}}
         {$this
            set
            other_player
            {{if_else
                  {==
                     $this
                     {object guitarist0}}
                  guitarist1
                  guitarist0}
               player}}}
      0)
   (is_doing_badly
      {if_else
         {game multiplayer}
         {>
            {-
               {{$this get other_player}
                  score}
               {{$this player}
                  score}}
            {$this get score_diff}}
         {<
            {{$this player}
               crowd_rating}
            0.2}}))
(walks_enabled TRUE)
(no_walk_chars)
(walk_delays
   FALSE
   FALSE
   (35 55)
   (20 40)
   FALSE)