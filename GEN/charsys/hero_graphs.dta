#include ../config/macros.dta
#include hero_channels.dta
#define HERO_HAND_ANIMATIONS
((blend_width 0.24)
   (animations
      (finger_powerchord_1 HERO_LEFTHAND_CHANNELS)
      (finger_powerchord_2 HERO_LEFTHAND_CHANNELS)
      (finger_chord_bar HERO_LEFTHAND_CHANNELS)
      (finger_chord_cmajor HERO_LEFTHAND_CHANNELS)
      (finger_chord_dmajor HERO_LEFTHAND_CHANNELS)
      (finger_chord_openmajor HERO_LEFTHAND_CHANNELS)
      (finger_chord_openminor HERO_LEFTHAND_CHANNELS)
      (finger_chord_seventh HERO_LEFTHAND_CHANNELS)
      (finger_hold_index HERO_LEFTHAND_CHANNELS)
      (finger_hold_middle HERO_LEFTHAND_CHANNELS)
      (finger_hold_ring HERO_LEFTHAND_CHANNELS)
      (finger_hold_pinky HERO_LEFTHAND_CHANNELS)
      (finger_vibrato_index HERO_LEFTHAND_CHANNELS)
      (finger_vibrato_middle HERO_LEFTHAND_CHANNELS)
      (finger_vibrato_ring HERO_LEFTHAND_CHANNELS)
      (finger_vibrato_pinky HERO_LEFTHAND_CHANNELS)
      (finger_hold_index_hi HERO_LEFTHAND_CHANNELS)
      (finger_hold_middle_hi HERO_LEFTHAND_CHANNELS)
      (finger_hold_ring_hi HERO_LEFTHAND_CHANNELS)
      (finger_hold_pinky_hi HERO_LEFTHAND_CHANNELS)
      (finger_vibrato_index_hi HERO_LEFTHAND_CHANNELS)
      (finger_vibrato_middle_hi HERO_LEFTHAND_CHANNELS)
      (finger_vibrato_ring_hi HERO_LEFTHAND_CHANNELS)
      (finger_vibrato_pinky_hi HERO_LEFTHAND_CHANNELS)
      (finger_open HERO_LEFTHAND_CHANNELS)
      (strum_open HERO_STRUM_CHANNELS)
      (strum_down_long HERO_STRUM_CHANNELS)
      (strum_pluck_down HERO_STRUM_CHANNELS)
      (strum_pluck_short HERO_STRUM_CHANNELS)))
#define HERO_GRAPH
((blend_width 1)
   (play_flags kAnimBeatAlign2)
   (graph
      (transitions
         ((kGuitarIntro)
            (self))
         ((kGuitarNormal kGuitarExtreme kGuitarSpecial kGuitarIdle kGuitarBad kWalkStop)
            (kGuitarNormal kGuitarSpecial kGuitarExtreme kGuitarIdle kGuitarWin kGuitarWinFinal kGuitarLose kGuitarBad))
         ((kGuitarIntro)
            (kGuitarNormal kGuitarExtreme kGuitarIdle kGuitarBad))
         ((kGuitarNormal kGuitarExtreme kGuitarIdle)
            (kWalkTurn))
         ((kWalkTurn)
            (kWalkWalk))
         ((kWalkWalk)
            (self)))
      (exclusions
         (kWalkLeft kWalkRight kWalkBackward)
         (kWalkForward kWalkBackward))
      (bone_weights
         (bone_pos_guitar.mesh 0))
      (criteria
         ((max_error 18)
            (beat_border 0.2))
         ((kGuitarExtreme)
            (kGuitarExtreme)
            ((tries 3)
               (restrict
                  {&&
                     {if_else
                        {< $node.try 2}
                        {&&
                           {< $node.b_middle -2.1}
                           {> $node.a_middle 2.1}}
                        {&&
                           {< $node.b_middle -1.1}
                           {> $node.a_middle 1.1}}}
                     {< $node.b_start 5}
                     {< $node.a_end 5}
                     {if_else
                        {> $node.try 0}
                        TRUE
                        {&&
                           {> $node.a_end 3}
                           {> $node.b_start 3}}}})))
         ((kWalkStop)
            ()
            ((restrict
                  {> $node.a_start 2.1})))
         ((kGuitarNormal kGuitarExtreme kGuitarIdle kGuitarBad kGuitarSpecial kWalkStop)
            (kGuitarWin kGuitarLose)
            ((max_error 24)
               (max_dist 2.2)
               (min_dist 1)
               (end_dist 3)
               (restrict
                  {< $node.b_start 3})))
         ((kGuitarNormal kGuitarExtreme kGuitarIdle kGuitarBad kGuitarSpecial kWalkStop)
            (kGuitarWinFinal)
            ((max_error 24)
               (max_dist 2.2)
               (min_dist 1)
               (end_dist 3)
               (restrict
                  {< $node.b_start 0.1})))
         ((kGuitarNormal kGuitarExtreme kGuitarIdle kGuitarBad kWalkStop)
            (kGuitarSpecial)
            ((max_dist 4)
               (min_dist 1.8)
               (end_dist 3)
               (restrict
                  {< $node.b_start 3})))
         ((kGuitarIntro)
            (kGuitarNormal kGuitarExtreme kGuitarIdle kGuitarBad)
            ((max_error 24)
               (max_dist 3)
               (min_dist 2)
               (end_dist 3)
               (restrict
                  {< $node.b_start 3})))
         ((kGuitarNormal kGuitarIdle kGuitarExtreme)
            (kWalkTurn)
            ((max_error 30000000)
               (min_dist 4)
               (max_dist MAX_WALK_WAIT)
               (end_dist 2)
               (restrict
                  {< $node.b_start 1.2})))
         ((kWalkTurn)
            (kWalkWalk)
            ((restrict
                  {&&
                     {> $node.a_start 1.3}
                     {< $node.a_end 1.2}
                     {< $node.b_start 2}})))
         (()
            ()
            ((restrict
                  {&&
                     {< $node.b_start 2}
                     {< $node.a_end 2}})))
         ((kWalkWalk)
            (self)
            ((tries 2)
               (restrict
                  {&&
                     {> $node.b_start 0.5}
                     {>
                        $node.delta
                        {if_else
                           {> $node.try 0}
                           1
                           3}}}))))))
#define HERO_UI_GRAPH
((play_flags kAnimRealTime)
   (blend_width 1)
   (graph
      (transitions
         (()
            ()))
      (criteria
         ((max_error 18)
            (beat_border 0.2))
         (()
            ()
            ((restrict
                  {&&
                     {< $node.b_start 1}
                     {< $node.a_end 2}}))))))