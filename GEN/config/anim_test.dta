#include ../../../system/run/config/anim_test.dta
(anims
   #include ../charsys/anims_macros.dta)
(crowd_stuff
   #include ../arena/crowd.dta)
(charsys
   #include ../charsys/charsys.dta)
(walk_flags
   kWalkWalk
   ({'|' kWalkWalk kWalkForward}
      {'|' kWalkWalk kWalkLeft}
      {'|' kWalkWalk kWalkRight}))
#define CROWD_ATEST_COMMON
((namespace 1024 8192)
   (bone.servo CROWD_CHANNELS)
   (handlers
      (preload
         {main.drv
            set_anims
            {$this find_or_load CROWD_ANIMS}})
      CROWD_RESET
      CROWD_SET_HAND))
(chars
   (grim
      {create
         {find $syscfg charsys archetypes grim}})
   (punk
      {create
         {find $syscfg charsys archetypes punk}})
   (nu_metal
      {create
         {find $syscfg charsys archetypes nu_metal}})
   (classic
      {create
         {find $syscfg charsys archetypes classic}})
   (alterna
      {create
         {find $syscfg charsys archetypes alterna}})
   (hair_metal
      {create
         {find $syscfg charsys archetypes hair_metal}})
   (hiphop
      {create
         {find $syscfg charsys archetypes hiphop}})
   (metal
      {create
         {find $syscfg charsys archetypes metal}})
   (bass
      {create BASS_METAL})
   (drummer
      {create DRUMMER_METAL})
   (keyboard
      {create KEYBOARD_METAL})
   (singer_female
      {create SINGER_FEMALE_METAL})
   (singer_male
      {create SINGER_MALE_METAL})
   (crowd_male01
      {create
         (male1
            CROWD_ATEST_COMMON
            (outfit
               (directory
                  "charsys/crowd")
               (category
                  (skeleton
                     (''
                        (load
                           "crowd_male01"))))))})
   (crowd_male02
      {create
         (male2
            CROWD_ATEST_COMMON
            (outfit
               (directory
                  "charsys/crowd")
               (category
                  (skeleton
                     (''
                        (load
                           "crowd_male02"))))))})
   (crowd_male03
      {create
         (male3
            CROWD_ATEST_COMMON
            (outfit
               (directory
                  "charsys/crowd")
               (category
                  (skeleton
                     (''
                        (load
                           "crowd_male03"))))))})
   (crowd_female01
      {create
         (female1
            CROWD_ATEST_COMMON
            (outfit
               (directory
                  "charsys/crowd")
               (category
                  (skeleton
                     (''
                        (load
                           "crowd_female01"))))))})
   (crowd_female02
      {create
         (female2
            CROWD_ATEST_COMMON
            (outfit
               (directory
                  "charsys/crowd")
               (category
                  (skeleton
                     (''
                        (load
                           "crowd_female02"))))))})
   (crowd_female03
      {create
         (female3
            CROWD_ATEST_COMMON
            (outfit
               (directory
                  "charsys/crowd")
               (category
                  (skeleton
                     (''
                        (load
                           "crowd_female03"))))))})
   (metal_ui
      {create
         {find $syscfg charsys archetypes metal}
         (meta 1)})
   (punk_ui
      {create
         {find $syscfg charsys archetypes punk}
         (meta 1)})
   (nu_metal_ui
      {create
         {find $syscfg charsys archetypes nu_metal}
         (meta 1)})
   (classic_ui
      {create
         {find $syscfg charsys archetypes classic}
         (meta 1)})
   (alterna_ui
      {create
         {find $syscfg charsys archetypes alterna}
         (meta 1)})
   (hair_metal_ui
      {create
         {find $syscfg charsys archetypes hair_metal}
         (meta 1)})
   (hiphop_ui
      {create
         {find $syscfg charsys archetypes hiphop}
         (meta 1)})
   (grim_ui
      {create
         {find $syscfg charsys archetypes grim}
         (meta 1)}))
(handlers)